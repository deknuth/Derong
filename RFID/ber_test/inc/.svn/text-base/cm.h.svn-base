/*
 * cm.h
 *
 *  Created on: 2014-12-25
 *      Author: Lovenix
 */

#ifndef CM_H_
#define CM_H_

#define MAX_EQU	512
#define ROBOT_HEART_TIME 	300
#define MOBIL_HEART_TIME	300
#define WATCH_HEART_TIME	300

#define ROBOT_DEAD_TIME 	10
#define MOBIL_DEAD_TIME 	10
#define WATCH_DEAD_TIME 	60
#define MHI	(MAX_REC<<1)+1			// max hash index
#define NANOSECOND 50000000UL

typedef struct rn{				// node struct
	unsigned char n_type;		// node type
	unsigned char n_mac[17];	// node MAC address
	unsigned int group;			// group number
	unsigned int n_num;			// node number
	unsigned char n_stat;		// node state
	unsigned char n_resever;	// reserver bit
	unsigned char n_drop;		// dropping flag
}NINFO[MAX_EQU];				// node info

typedef struct ri{
	int cntime;			// TCP 	持续时间
	int tfd;			// Robot TCP handle
	int tflag;			// TCP	连接标志
	int cflag;			// client close flag
	unsigned int uPort;
//	char rst[17];		// 机器人状态		0--离线  1--在线   2--3g在线
	unsigned char id[17];		// 设备id
	unsigned char ip[16];		// client IP
	unsigned char lip[4];		// locale IP
	unsigned char wc;
	int hiv;					// hash index value
	NINFO rnInfo;
	unsigned char uFlag;
}RINFO[MAX_REC];

typedef struct mi{
	int cntime;			// TCP 	continue time
	int mfd;			// mobile TCP handle
	int tflag;			// TCP	client flag
	int cflag;			// client close flag
	unsigned int uPort;
	unsigned char wc;	// write count
	unsigned char id[17];
	unsigned char ip[16];
	unsigned char user[17];
	int hiv;				// hash index value
}MINFO[MAX_REC];

typedef struct wi{
	int cntime;			// TCP 	continue time
	int wfd;			// watch TCP handle
	int tflag;			// TCP	client flag
	int cflag;			// client close flag
	unsigned int uPort;
	unsigned char id[17];
	unsigned char ip[16];
	int hiv;				// hash index value
}WINFO[MAX_REC];

typedef struct hi{
	int rhiv;			// robot client socket handle index hash
	int mcun;			// mobile connect user number
	int mhiv[MUN];		// mobile client socket handle index hash
	int whiv;			// watch client socket handle index hash
}HIV[MHI];

extern RINFO rInfo;
extern MINFO mInfo;
extern WINFO wInfo;
extern HIV hInfo;

extern void* RClientManage(void *arg);
extern void* MClientManage(void *arg);
extern void* WClientManage(void *arg);

extern void UpdateRClient(int rfd);
extern void UpdateMClient(int mfd);
extern void UpdateWClient(int wfd);

extern int GetMfdIndex(int mfd,int nPos);
extern int DelMfdIndex(int mfd,int nPos);
extern int GetMfdNum(int nPos);

extern void ResetRClient(int rfd);
extern void ResetMClient(int mfd);
extern void ResetWClient(int wfd);

#endif

